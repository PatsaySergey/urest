<?php

namespace Netcast\Urest\MainBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Sonata\MediaBundle\Provider\ImageProvider;

/**
 * ApartmentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ApartmentRepository extends EntityRepository
{

    public function getApartmentByType($typeId,$city,$lang)
    {
        $qb = $this->createQueryBuilder('apartment')
            ->select(['apartment'])
            ->where('apartment.city = :city')
            ->andWhere('apartment.lang = :lang')
            ->andWhere('apartment.types = :types')
            ->setParameter('city',$city)
            ->setParameter('types', $typeId)
            ->setParameter('lang', $lang)
            ->orderBy('apartment.title','ASC')
        ;
        return $qb->getQuery()->getResult();
    }

    public function getApartmentsArray(ImageProvider $pr,$priceExt)
    {
        $result = [];
        $items = $this->createQueryBuilder('apartment')->where('apartment.active = :active')->setParameter('active',true)->getQuery()->getResult();
        foreach ($items as $key => $item) {
            $mainImg = $item->getMainImage();
            $mainImgPath = null;
            if($mainImg) {
                $format = $pr->getFormatName($mainImg->getMedia(), 'reference');
                $mainImgPath = $pr->generatePublicUrl($mainImg->getMedia(), $format);
            }
            $addImg = [];
            foreach ($item->getImages() as $img) {
                $format = $pr->getFormatName($img->getMedia(), 'reference');
                $addImg[] = $pr->generatePublicUrl($img->getMedia(), $format);
            }
            $result[$key] = [
                'id' => $item->getId(),
                'title' => $item->getContent()->getTitle(),
                'description' => $item->getContent()->getContent(),
                'type' => 'apartment',
                'image' => $mainImgPath,
                'city' => $item->getCity()->getId(),
                'address' => $item->getAddress(),
                'apType' => $item->getTypes()->getId(),
                'apRooms' => $item->getRoomsCount(),
                'images' => $addImg,
                'price' => $priceExt->getPrice($item->getPrice(),true),
                'priceStr' => $priceExt->getPrice($item->getPrice()),
            ];
        }
        return $result;
    }

}
