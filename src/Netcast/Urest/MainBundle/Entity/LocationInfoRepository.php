<?php

namespace Netcast\Urest\MainBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * AboutUsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LocationInfoRepository extends EntityRepository
{
    public function findCountries($lang)
    {
        $qb = $this->createQueryBuilder('locations')
            ->select(['locations','images'])
            ->leftJoin('locations.locationinfo_image', 'images', 'WITH', 'images.main = :main')
            ->where('locations.active = :active')
            ->andWhere('locations.lang = :lang')
            ->andWhere('locations.parent IS NULL')
            ->andWhere('locations.datePublish <= :datePublish')
            ->setParameter('main',true)
            ->setParameter('active', true)
            ->setParameter('datePublish', new \DateTime())
            ->setParameter('lang', $lang)
            ->orderBy('locations.title','ASC')
        ;
        return $qb->getQuery()->getResult();
    }

    public function getChildrenByLang($lang,$id)
    {
        $qb = $this->createQueryBuilder('locations')
            ->where('locations.active = :active')
            ->andWhere('locations.lang = :lang')
            ->andWhere('locations.parent = :parent')
            ->andWhere('locations.datePublish <= :datePublish')
            ->setParameter('parent',$id)
            ->setParameter('active', true)
            ->setParameter('datePublish', new \DateTime())
            ->setParameter('lang', $lang)
            ->orderBy('locations.title','ASC')
        ;
        return $qb->getQuery()->getResult();
    }

    public function searchCountries($lang,$search)
    {
        $qb = $this->createQueryBuilder('locations')
            ->select(['locations','images'])
            ->leftJoin('locations.locationinfo_image', 'images', 'WITH', 'images.main = :main')
            ->where('locations.active = :active')
            ->andWhere('locations.lang = :lang')
            ->andWhere('locations.title like :search OR locations.content like :search')
            ->setParameter('search',"%{$search}%")
            ->andWhere('locations.datePublish <= :datePublish')
            ->setParameter('main',true)
            ->setParameter('active', true)
            ->setParameter('datePublish', new \DateTime())
            ->setParameter('lang', $lang)
            ->orderBy('locations.title','ASC')
        ;
        return $qb->getQuery()->getResult();
    }
}
